/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sorts.view;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import javax.swing.JOptionPane;
import sorts.*;

/**
 *
 * @author Khozex
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ordenar = new javax.swing.JButton();
        arrayInput = new javax.swing.JTextField();
        countingSortButton = new javax.swing.JRadioButton();
        bubbleSortButton = new javax.swing.JRadioButton();
        selectionSortButton = new javax.swing.JRadioButton();
        insertionSortButton = new javax.swing.JRadioButton();
        MultiThreading = new javax.swing.JButton();
        CheckBox = new javax.swing.JCheckBox();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("ORDENAÇÃO DE NÚMEROS");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("ORDENAÇÃO DE NÚMEROS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(77, 77, 77))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Números:");

        ordenar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ordenar.setText("Ordenar ");
        ordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarActionPerformed(evt);
            }
        });

        arrayInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrayInputActionPerformed(evt);
            }
        });

        buttonGroup1.add(countingSortButton);
        countingSortButton.setText("Counting Sort");
        countingSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countingSortButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(bubbleSortButton);
        bubbleSortButton.setText("BubbleSort");

        buttonGroup1.add(selectionSortButton);
        selectionSortButton.setText("SelectionSort");

        buttonGroup1.add(insertionSortButton);
        insertionSortButton.setText("InsertionSort");

        MultiThreading.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        MultiThreading.setText("Ordenar  todos");
        MultiThreading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiThreadingActionPerformed(evt);
            }
        });

        CheckBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CheckBox.setText("Usar números aleatórios");
        CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ordenar)
                .addGap(40, 40, 40)
                .addComponent(MultiThreading)
                .addGap(91, 91, 91))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bubbleSortButton)
                    .addComponent(insertionSortButton)
                    .addComponent(selectionSortButton)
                    .addComponent(countingSortButton)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arrayInput, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CheckBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrayInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CheckBox)
                .addGap(26, 26, 26)
                .addComponent(countingSortButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bubbleSortButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectionSortButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertionSortButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ordenar)
                    .addComponent(MultiThreading))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarActionPerformed
        int[] numeros;
        if (!CheckBox.isSelected()) {
            String array = arrayInput.getText();
            String[] numeros2 = array.split(",");
            numeros = new int[numeros2.length];
            for (int i = 0; i < numeros.length; i++){
                numeros[i] = Integer.parseInt(numeros2[i]);
            }
        } else {
            numeros = new int[20];
            Random random = new Random();
            for (int i = 0; i < numeros.length; i++) {
                numeros[i] = random.nextInt(100);
            }
        }
      
        if (bubbleSortButton.isSelected()){
            double inicioContagem = System.nanoTime();
            int[] numeros_ordenados = Sorts.bubbleSort(numeros);
            double fimContagem = System.nanoTime();
            double resultado = fimContagem - inicioContagem;
            JOptionPane.showMessageDialog(null,Arrays.toString(numeros_ordenados) + "\nOrdenado em: " + resultado + " nano seconds");         
            
        }
        if (insertionSortButton.isSelected()){
            double inicioContagem = System.nanoTime();
            int[] numeros_ordenados = Sorts.insertionSort(numeros);
            double fimContagem = System.nanoTime();
            double resultado = fimContagem - inicioContagem;
            JOptionPane.showMessageDialog(null,Arrays.toString(numeros_ordenados) + "\nOrdenado em: " + resultado + " nano seconds");   
            
        }
        if (selectionSortButton.isSelected()){
            double inicioContagem = System.nanoTime();
            int[] numeros_ordenados = Sorts.selectionSort(numeros);
            double fimContagem = System.nanoTime();
            double resultado = fimContagem - inicioContagem;
            JOptionPane.showMessageDialog(null,Arrays.toString(numeros_ordenados) + "\nOrdenado em: " + resultado + " nano seconds");   
        }
        if (countingSortButton.isSelected()){
            double inicioContagem = System.nanoTime();
            int[] numeros_ordenados = Sorts.countingSort(numeros);
            double fimContagem = System.nanoTime();
            double resultado = fimContagem - inicioContagem;
            JOptionPane.showMessageDialog(null,Arrays.toString(numeros_ordenados) + "\nOrdenado em: " + resultado + " nano seconds");   
        }

    }//GEN-LAST:event_ordenarActionPerformed

    private void arrayInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrayInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrayInputActionPerformed

    private void countingSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countingSortButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countingSortButtonActionPerformed

    private void MultiThreadingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiThreadingActionPerformed
        int[] numeros;
        if (!CheckBox.isSelected()) {
            String array = arrayInput.getText();
            String[] numeros2 = array.split(",");
            numeros = new int[numeros2.length];
            for (int i = 0; i < numeros.length; i++){
                numeros[i] = Integer.parseInt(numeros2[i]);
            }
        } else {
            numeros = new int[50000];
            Random random = new Random();
            for (int i = 0; i < numeros.length; i++) {
                numeros[i] = random.nextInt(100000000);
            }
        }
        
        InsertionSortT is = new InsertionSortT(numeros);
        Thread ist = new Thread(is);
        BubbleSortT bs = new BubbleSortT(numeros);
        Thread bst = new Thread(bs);
        SelectionSortT ss = new SelectionSortT(numeros);
        Thread sst = new Thread(ss);
        CountingSortT cs = new CountingSortT(numeros);
        Thread cst = new Thread(cs);

        ist.start();
        bst.start();
        sst.start();
        cst.start();
    }//GEN-LAST:event_MultiThreadingActionPerformed

    private void CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBoxActionPerformed
        if (CheckBox.isSelected()) {
            arrayInput.setEditable(false);
            arrayInput.setText("");
        } else {
            arrayInput.setEditable(true);
        }
    }//GEN-LAST:event_CheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBox;
    private javax.swing.JButton MultiThreading;
    private javax.swing.JTextField arrayInput;
    private javax.swing.JRadioButton bubbleSortButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton countingSortButton;
    private javax.swing.JRadioButton insertionSortButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton ordenar;
    private javax.swing.JRadioButton selectionSortButton;
    // End of variables declaration//GEN-END:variables
}
